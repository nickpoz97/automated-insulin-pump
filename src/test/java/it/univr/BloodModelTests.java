/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package it.univr;

import it.univr.bloodModels.BloodModel;
import it.univr.bloodModels.InteractiveBloodModel;
import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class BloodModelTests {
    private BloodModel bloodModel;

    @Before
    public void initialize() {
        this.bloodModel = new InteractiveBloodModel();
    }

    @Test
    public void testInvalidBloodDataInstance(){
        try {
            this.bloodModel = new InteractiveBloodModel(BloodModel.getMaxSugar()+1, 0);
            fail();
        }
        catch (LethalSugarValuesException e){
            assertTrue(true);
        }
        try{
            this.bloodModel = new InteractiveBloodModel(BloodModel.getMinSugar()-1, 0);
            fail();
        }
        catch (LethalSugarValuesException e){
            assertTrue(true);
        }
    }

    @Test
    public void testRaisingSugar(){
        bloodModel.addSugar(2);
        changingSugarAssertions();
    }

    @Test
    public void testLoweringSugar(){
        bloodModel.injectInsulin(2);
        changingSugarAssertions();
    }

    private void changingSugarAssertions() {
        assertEquals(bloodModel.retrieveSugarLevel(), bloodModel.getBaseSugarLevel() + bloodModel.getIncrementRate());
        assertEquals(bloodModel.retrieveSugarLevel(), bloodModel.getBaseSugarLevel() + 2*bloodModel.getIncrementRate());
    }

    @Test(expected = LethalSugarValuesException.class)
    public void testExceedingSugarValue(){
        bloodModel.addSugar(2);
        for(int i = 0 ; i < 1000 ; i++){
            // it also updates sugar level in interactiveBloodData
            bloodModel.retrieveSugarLevel();
        }
        fail();
    }

    @Test(expected = LethalSugarValuesException.class)
    public void testLowSugarValue(){
        bloodModel.injectInsulin(2);

        for(int i = 0 ; i < 1000 ; i++){
            // it also updates sugar level in interactiveBloodData
            bloodModel.retrieveSugarLevel();
        }
        fail();
    }

    @Test
    public void insulinInjectionTest(){
        bloodModel.injectInsulin(2);
        assertEquals(-2, bloodModel.getIncrementRate());
        bloodModel.injectInsulin(10);
        assertEquals(-12, bloodModel.getIncrementRate());
    }
}
